plugins {
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.adarshr.test-logger' version '2.1.1'
    id 'java'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group 'org.example'
sourceCompatibility = 1.8

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {   
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // gradle task(build)에러 발생해서 추가함.
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.h2database:h2'
    // compile('org.springframework.boot:spring-boot-starter-mustache')
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    
    // api 문서-swagger
    // implementation 'io.springfox:springfox-swagger2:2.6.1'
	// implementation 'io.springfox:springfox-swagger-ui:2.6.1'
	
	// livereload
	implementation 'org.springframework.boot:spring-boot-devtools'
	
	// runtimeOnly 'org.mariadb.jdbc:mariadb-java-client' // MariaDB
	implementation 'org.mariadb.jdbc:mariadb-java-client' // MariaDB
	
	
    implementation 'com.querydsl:querydsl-jpa'
    
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    implementation group: 'net.minidev', name: 'json-smart', version: '2.3'
    
    implementation group: 'com.jayway.jsonpath', name: 'json-path', version: '2.5.0'
    
    // validation 처리 @Valid @NotBlank,,,
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.4.5'
}

test {
    useJUnitPlatform()
}


def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
